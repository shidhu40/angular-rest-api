{"version":3,"file":"pagination.component.js","sources":["../../../src/components/pagination.component.ts"],"names":[],"mappings":"OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,eAAe;AAC7D,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB;AAC7C,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB;AAC3D,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB;;;;;;AAIrD;AAEY,IAAR,6BAAoB,SAAoB;AAAI,QAAxB,cAAS,GAAT,SAAS,CAAW;AAAC,IAAE,CAAC;AAChD,IACI,sCAAQ,GAAR;AACH,QAAO,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACvF,IAAI,CAAC;AAEL,IAAI,yCAAW,GAAX;AAAc,QACV,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;AACtD,IAAI,CAAC;AAEL,IAAI,uCAAS,GAAT;AACJ,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;AAClC,IAAI,CAAC;AAEL,IAAI,sCAAQ,GAAR;AACH,QAAO,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;AAC1E,IAAI,CAAC;AAEL,IAAI,sBAAI,wCAAO;AAAI,aAAf;AAAc,YACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC1E,QAAI,CAAC;AAEL;AACQ;AAA2B,OAH9B;AACL,IACI,sBAAI,sCAAK;AAAI,aAAb;AACJ,YAAQ,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;AACpC,QAAI,CAAC;AAEL,aAAI,UAAU,KAAK;AACnB,YAAQ,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAM,KAAK,CAAC,CAAC,CAAC,oEAAoE;AACvH,QAAI,CAAC;AAEL;AACS;AACT,OARK;AACL,IAKI,sBAAI,qCAAI;AAAI,aAAZ;AACH,YAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AACnC,QAAI,CAAC;AAEL,aAAI,UAAS,KAAK;AAClB,YAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,MAAM,CAAM,KAAK,CAAC,CAAC;AACjD,QAAI,CAAC;AACJ;AAA0B;AAClB,OANJ,AAWH;IANK,JAOP,IAAA,kBAAkB;WAPD,GAA0B,UAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,lDAO1B,IAAO,kCAAc,GAAmE,cAAM,OAAA;QAN5F,QAAQ,EAAE,uBAAuB,sBACjC,QAAQ,EAAE,mBAAmB,sBAC7B,lHAKF,QAAA,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,cAAM,OAAA,SAAS,EAAT,CAAS,CAAC,EAAG,EAAE,EAAG,EAAC;EALlF,EAAE,CAAC,LAMX,KAAC,EAF6F,CAE7F;WAN0B,CAAC,kBAC3B,EAAG,EAAE,OACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAIC;AACF,IAAA,0BAAC;AAAD,CAAC,AAlDD,IAkDC;AACD","sourcesContent":["import { Component, Inject, forwardRef } from '@angular/core';\nimport { DataTable } from './table.component';\nimport { PAGINATION_TEMPLATE } from './pagination.template';\nimport { PAGINATION_STYLE } from \"./pagination.style\";\n\n\n\nexport class DataTablePagination {\n\n    constructor( public dataTable: DataTable) {}\n\n    pageBack() {\n        this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);\n    }\n\n    pageForward() {\n        this.dataTable.offset += this.dataTable.limit;\n    }\n\n    pageFirst() {\n        this.dataTable.offset = 0;\n    }\n\n    pageLast() {\n        this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;\n    }\n\n    get maxPage() {\n        return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);\n    }\n\n    get limit() {\n        return this.dataTable.limit;\n    }\n\n    set limit(value) {\n        this.dataTable.limit = Number(<any>value); // TODO better way to handle that value of number <input> is string?\n    }\n\n    get page() {\n        return this.dataTable.page;\n    }\n\n    set page(value) {\n        this.dataTable.page = Number(<any>value);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'data-table-pagination',\n  template: PAGINATION_TEMPLATE,\n  styles: [PAGINATION_STYLE]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DataTable, decorators: [{ type: Inject, args: [forwardRef(() => DataTable), ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}