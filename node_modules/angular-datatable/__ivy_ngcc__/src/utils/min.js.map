{"version":3,"file":"min.js","sources":["../../../src/utils/min.ts"],"names":[],"mappings":"OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe;;AAInD;AAAoC,IAApC;AAAqB,IAYrB,CAAC;AACD,IAZE,2BAAS,GAAT,UAAU,KAAe,EAAE,IAAc;AAAI,QAC3C,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACvC,IAAE,CAAC,CAKD;IAJK,kBAAU,tBAKjB,IAAA,kBAAkB;EALyB,UAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,sBACnB,vDAIF,IAAO,sBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F;EALK,EAAE,KAAK,kBACZ,EAAG,EAAE,OACL;;;;;;;gDAGC;AACF,IAAA,cAAC;AAAD,CAAC,AAZD,IAYC;AACD","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n\n\nexport class MinPipe implements PipeTransform {\n  transform(value: number[], args: string[]): any {\n    return Math.min.apply(null, value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'min'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}